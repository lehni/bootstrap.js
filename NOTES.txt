Notes:

- This library breaks for-in on the client side in the favour of .each()
  If for-in is to be used, each property needs to be checked by using
  obj.has(propertyName).

- The code cannot depend on instanceof, as this would break Mac IE, for which
  support is currently still needed for Lineto.com. This will change in a
  a year or two. At that point, some parts of the code may be written
  differently (wherever typeof is used now)

- The convention for functions used as scopes is to wrap them in brackets,
  to visually make it clearer what they are, and again to not break Mac IE,
  where the bracketless notation would cause an error:

  (function() {
      // This works on Mac IE
  })();

  function() {
      // This does not work on Mac IE
  }();

- The syntax "property in object" does only work in for constructs on Mac IE,
  not as a conditional statement "if (property in object)". But the following
  works: if (object.property !== undefined).

- Use charAt for char lookup in strings, as string[index] does not work on Mac IE.

- Do only rely on all Array functions to be present after bootstrap.js has
  been included, as browser/legacy/Array.js adds a few functions.

- Astonishingly enough, arguments.callee works on Mac IE.

- Testing for a string to be in a range of certain values:
  instead of doing

      ['one', 'two', 'three'].indexOf('two') != -1

  use this:

      /^(one|two|three)$/.test('two');

  It is shorter, much faster on Firefox, and about on pair on others.
